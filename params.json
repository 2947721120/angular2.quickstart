{
  "name": "Angular2.quickstart",
  "tagline": "角2快速入门源from the文件",
  "body": "# Angular 2 QuickStart Source\r\n\r\nThis repository holds the TypeScript source code of the [angular.io quickstart](https://angular.io/docs/ts/latest/quickstart.html),\r\nthe foundation for most of the documentation samples and potentially a good starting point for your application.\r\n\r\nIt's been extended with testing support so you can start writing tests immediately.\r\n\r\n**This is not the perfect arrangement for your application. It is not designed for production. \r\nIt exists primarily to get you started quickly with learning and prototyping in Angular 2**\r\n\r\nWe are unlikely to accept suggestions about how to grow this QuickStart into something it is not.\r\nPlease keep that in mind before posting issues and PRs.\r\n\r\n## Create a new project based on the QuickStart\r\n\r\nClone this repo into new project folder (e.g., `my-proj`).\r\n```bash\r\ngit clone  https://github.com/angular/quickstart  my-proj\r\ncd my-proj\r\n```\r\n\r\nWe have no intention of updating the source on `angular/quickstart`.\r\nDiscard everything \"git-like\" by deleting the `.git` folder.\r\n```bash\r\nrm -rf .git\r\n```\r\n\r\n### Create a new git repo\r\nYou could [start writing code](#start-development) now and throw it all away when you're done.\r\nIf you'd rather preserve your work under source control, consider taking the following steps.\r\n\r\nInitialize this project as a *local git repo* and make the first commit:\r\n```bash\r\ngit init\r\ngit add .\r\ngit commit -m \"Initial commit\"\r\n```\r\n\r\nCreate a *remote repository* for this project on the service of your choice.\r\n\r\nGrab its address (e.g. *`https://github.com/<my-org>/my-proj.git`*) and push the *local repo* to the *remote*.\r\n```bash\r\ngit remote add origin <repo-address>\r\ngit push -u origin master\r\n```\r\n## Install npm packages\r\n\r\nInstall the npm packages described in the `package.json` and verify that it works:\r\n\r\n**Attention Windows Developers:  You must run all of these commands in administrator mode**\r\n\r\n```bash\r\nnpm install\r\nnpm start\r\n```\r\n\r\nThe `npm start` command first compiles the application, \r\nthen simultaneously re-compiles and runs the `lite-server`.\r\nBoth the compiler and the server watch for file changes.\r\n\r\nShut it down manually with Ctrl-C.\r\n\r\nYou're ready to write your application.\r\n\r\n### npm scripts\r\n\r\nWe've captured many of the most useful commands in npm scripts defined in the `package.json`:\r\n\r\n* `npm start` - runs the compiler and a server at the same time, both in \"watch mode\".\r\n* `npm run tsc` - runs the TypeScript compiler once.\r\n* `npm run tsc:w` - runs the TypeScript compiler in watch mode; the process keeps running, awaiting changes to TypeScript files and re-compiling when it sees them.\r\n* `npm run lite` - runs the [lite-server](https://www.npmjs.com/package/lite-server), a light-weight, static file server, written and maintained by\r\n[John Papa](https://github.com/johnpapa) and\r\n[Christopher Martin](https://github.com/cgmartin)\r\nwith excellent support for Angular apps that use routing.\r\n* `npm run typings` - runs the typings tool.\r\n* `npm run postinstall` - called by *npm* automatically *after* it successfully completes package installation. This script installs the TypeScript definition files this app requires.\r\n\r\nHere are the test related scripts:\r\n* `npm test` - compiles, runs and watches the karma unit tests\r\n* `npm run webdriver:update` - ONE TIME update for protractor end-to-end (e2e) tests\r\n* `npm run e2e` - run protractor e2e tests, written in JavaScript (*e2e-spec.js)\r\n\r\n## Testing\r\n\r\nThe QuickStart documentation doesn't discuss testing. \r\nThis repo adds both karma/jasmine unit test and protractor end-to-end testing support.\r\n\r\nThese tools are configured for specific conventions described below.\r\n\r\n*It is unwise and rarely possible to run the application, the unit tests, and the e2e tests at the same time.\r\nWe recommend that you shut down one before starting another.*\r\n\r\n### Unit Tests\r\nTypeScript unit-tests are usually in the `app` folder. Their filenames must end in `.spec`.\r\n\r\nLook for the example `app/app.component.spec.ts`.\r\nAdd more `.spec.ts` files as you wish; we configured karma to find them.\r\n\r\nRun it with `npm test`\r\n\r\nThat command first compiles the application, then simultaneously re-compiles and runs the karma test-runner.\r\nBoth the compiler and the karma watch for (different) file changes.\r\n\r\nShut it down manually with Ctrl-C.\r\n\r\nTest-runner output appears in the terminal window.\r\nWe can update our app and our tests in real-time, keeping a weather eye on the console for broken tests.\r\nKarma is occasionally confused and it is often necessary to shut down its browser or even shut the command down (Ctrl-C) and\r\nrestart it. No worries; it's pretty quick.\r\n\r\nThe `HTML-Reporter` is also wired in. That produces a prettier output; look for it in `~_test-output/tests.html`.\r\n\r\n### End-to-end (E2E) Tests\r\n\r\n**BEFORE RUNNING THE FIRST TEST** you must update the Selenium webdriver. Run `npm run webdriver:update`.\r\n\r\nE2E tests are usually at the project root, above the `app` folder. \r\nTheir filenames must end in `e2e-spec.js`.\r\n\r\nE2E tests must be written in JavaScript (the author has not figured out how to write them in TS yet).\r\n\r\nLook for the example `e2e-spec.ts` in the root folder.\r\nAdd more `e2e-spec.js` files as you wish (although one usually suffices for small projects); \r\nwe configured protractor to find them.\r\n\r\n\r\nThereafter, run them with `npm run e2e`.\r\n\r\nThat command first compiles, then simultaneously starts the Http-Server at `localhost:8080`\r\nand launches protractor.  \r\n\r\nThe pass/fail test results appear at the bottom of the terminal window.\r\nA custom reporter (see `protractor.config.js`) generates a  `./protractor-results.txt` file \r\nwhich is easier to read; this file is excluded from source control.\r\n\r\nShut it down manually with Ctrl-C.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}